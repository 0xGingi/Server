[opnpc2,_] @player_combat_start;
[apnpc2,_] @player_combat_start_ap;

[label,player_combat_start_ap]
def_int $attackrange = ~player_attackrange(inv_getobj(worn, ^wearpos_rhand));
if (($attackrange <= 1 & ~player_in_combat_check = false) | npc_range(coord) > $attackrange) {
    p_aprange($attackrange);
    return;
}
@player_combat_start;

[label,player_combat_start]
if (~player_in_combat_check = false) {
    return;
}
if (%damagetype = ^ranged_style) {
    @player_ranged_attack;
}
if (~player_autocast_enabled = true) {
    @player_magic_attack;
}
@player_melee_attack;


[proc,player_npc_hit_roll](int $damagetype)(boolean)
def_int $attack_roll = ~player_attack_roll_specific($damagetype);
def_int $defence_roll = ~npc_defence_roll_specific($damagetype);
//mes("Clock: <tostring(map_clock)>, Player A: <tostring($attack_roll)>, NPC D: <tostring($defence_roll)>, Player Max: <tostring(%com_maxhit)>");
//mes("Attack roll: <tostring($attack_roll)>, Defence roll: <tostring($defence_roll)>");
if (randominc($attack_roll) > randominc($defence_roll)) {
    return(true);
}
return(false);

// returns the correct combat calculated attack damage for weapon
[proc,player_attack_roll_specific](int $damagetype)(int)
def_obj $weapon = inv_getobj(worn, ^wearpos_rhand);
switch_int ($damagetype) {
    case ^stab_style : return(%com_stabattack);
    case ^slash_style : return(%com_slashattack);
    case ^crush_style : return(%com_crushattack);
    case ^ranged_style : return(%com_rangeattack);
    case ^magic_style : return(%com_magicattack);
}
error("combat style of <tostring($damagetype)> not defined in switch for p_npc_melee_roll");

// returns the player's defence roll, depending on style
[proc,player_defence_roll_specific](int $damagetype)(int)
switch_int ($damagetype) {
    case ^stab_style : return(%com_stabdef);
    case ^slash_style : return(%com_slashdef);
    case ^crush_style : return(%com_crushdef);
    case ^ranged_style : return(%com_rangedef);
    case ^magic_style : return(%com_magicdef);
}
error("style of <tostring($damagetype)> not defined in switch for player_defence_roll_specific");

[proc,.player_defence_roll_specific](int $damagetype)(int)
switch_int ($damagetype) {
    case ^stab_style : return(.%com_stabdef);
    case ^slash_style : return(.%com_slashdef);
    case ^crush_style : return(.%com_crushdef);
    case ^ranged_style : return(.%com_rangedef);
    case ^magic_style : return(.%com_magicdef);
}

[proc,player_in_combat_check]()(boolean)
if (%npc_macro_event_target ! null & %npc_macro_event_target ! uid) {
    mes("It's not after you."); // https://youtu.be/y58EFTJNIH8
    return(false);
}
return(true);

[proc,player_attackrange](obj $rhand)(int)
if (~player_autocast_enabled = true){
    return(10);
}
def_int $attackrange = 0;
if ($rhand ! null) {
    $attackrange = min(oc_param($rhand, attackrange), 10);
    if (%damagestyle = ^style_ranged_longrange) {
        $attackrange = min(add($attackrange, 2), 10);
    }
}
return($attackrange);